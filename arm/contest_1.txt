#1 - zero

eor x0, x0, x0
-----------------------------------------------------------------------------------------
#2 - one

mov x0, #1
-----------------------------------------------------------------------------------------
#3 - next

add w0, w0, #1
-----------------------------------------------------------------------------------------
#4 - prev

sub w0, w0, #1
-----------------------------------------------------------------------------------------
#5 - sum

add w3, w1, w2
-----------------------------------------------------------------------------------------
#6 - sum64

add x3, x1, x2
-----------------------------------------------------------------------------------------
#7 - sub 

sub x3, x1, x2
-----------------------------------------------------------------------------------------
#8 - mul

mul w3, w1, w2
-----------------------------------------------------------------------------------------
#9 - mul64

mul x3, x1, x2
-----------------------------------------------------------------------------------------
#10 - sdiv

sdiv w3, w1, w2
-----------------------------------------------------------------------------------------
#11 - sdiv64

sdiv x3, x1, x2
-----------------------------------------------------------------------------------------
#12 - egalite 

cmp w1, w2
bne metka_1
    mov w3, 1
    b exit_mark
metka_1:
    mov w3, 0
exit_mark:
-----------------------------------------------------------------------------------------
#13 - egalite64

cmp x1, x2
bne metka_1
    mov x3, 1
    b exit_mark
metka_1:
    mov x3, 0
exit_mark:
-----------------------------------------------------------------------------------------
#14 - factorial

and w1, w1, 255
mov w2, #1
cmp w1, 0
beq exit_mark
mark_fact:
    mul w2, w2, w1
    sub w1, w1, #1
    cmp w1, #0
    bne mark_fact
exit_mark:
-----------------------------------------------------------------------------------------
#15 - factorial64

and x1, x1, 255
mov x2, #1
cmp x1, 0
beq exit_mark
mark_fact:
    mul x2, x2, x1
    sub x1, x1, #1
    cmp x1, #0
    bne mark_fact
exit_mark:
-----------------------------------------------------------------------------------------
#16 - antifa

mov w2, #1
mov w3, #1
mark_fact:
    mul w3, w3, w2
    add w2, w2, #1
    cmp w3, w1
    bne mark_fact
sub w2, w2, #1
-----------------------------------------------------------------------------------------
#17 - antifa64

mov x2, #1
mov x3, #1
mark_fact:
    mul x3, x3, x2
    add x2, x2, #1
    cmp x3, x1
    bne mark_fact
sub x2, x2, #1
-----------------------------------------------------------------------------------------
#18 - gcd

gcd_mark:
    cmp w1, w2
    beq exit_mark
    cmp w1, w2
    bcc gcd_submark_1
    sub w1, w1, w2
    b gcd_mark
gcd_submark_1:
    sub w2, w2, w1
    b gcd_mark
exit_mark:
-----------------------------------------------------------------------------------------
#19 - vector

eor x3, x3, x3
cmp x2, 0
beq exit_mark
sum_mark_1:
    ldr x4, [x1]
    add x3, x4, x3
    add x1, x1, #8
    sub x2, x2, #1
    cmp x2, #0
    bne sum_mark_1
exit_mark:
-----------------------------------------------------------------------------------------
